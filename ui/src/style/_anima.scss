// ***** Translate *****
$slideT:  translate(0, 10vh)      !default;
$slideR:  translate(-10vw, 0)     !default;
$slideB:  translate(0, -10vh)     !default;
$slideL:  translate(10vw, 0)      !default;
$slideTR: translate(-10vw, 10vh)  !default;
$slideBR: translate(-10vw, -10vh) !default;
$slideBL: translate(10vw, -10vh)  !default;
$slideTL: translate(10vw, 10vh)   !default;

// ***** Rotate *****
$turn:    rotate3d(0, 0, 1, 360deg) !default;
$turnX:   rotate3d(1, 0, 0, 360deg) !default;
$turnY:   rotate3d(0, 1, 0, 360deg) !default;
$turnXY:  rotate3d(1, 1, 0, 360deg) !default;
$turnXZ:  rotate3d(1, 0, 1, 360deg) !default;
$turnYZ:  rotate3d(0, 1, 1, 360deg) !default;
$turn3D:  rotate3d(1, 1, 1, 360deg) !default;

// ***** Scale *****
$bounce:    scale(-1, -1)   !default;
$grow:      scale(0.5, 0.5) !default;
$shrink:    scale(1.5, 1.5) !default;
$flipX:     scale(1, -1)    !default;
$flipY:     scale(-1, 1)    !default;
$openX:     scale(1, 0)     !default;
$openY:     scale(0, 1)     !default;
$flipperX:  scale(0, -1)    !default;
$flipperY:  scale(-1, 0)    !default;

// ***** Skew *****
$twistT:    skew(-90deg, -90deg)    !default;
$twistR:    skew(90deg, -90deg)     !default;
$twistB:    skew(90deg, 90deg)      !default;
$twistL:    skew(-90deg, 90deg)     !default;
$torsionT:  skew(-180deg, -180deg)  !default;
$torsionR:  skew(180deg, -180deg)   !default;
$torsionB:  skew(180deg, 180deg)    !default;
$torsionL:  skew(-180deg, 180deg)   !default;

$transforms: (
  // Translate
  'slideT':   $slideT,
  'slideR':   $slideR,
  'slideB':   $slideB,
  'slideL':   $slideL,
  'slideTR':  $slideTR,
  'slideBR':  $slideBR,
  'slideBL':  $slideBL,
  'slideTL':  $slideTL,
  // Rotate
  'turn':   $turn,
  'turnX':  $turnX,
  'turnY':  $turnY,
  'turnXY': $turnXY,
  'turnXZ': $turnXZ,
  'turnYZ': $turnYZ,
  'turn3D': $turn3D,
  // Scale
  'bounce':   $bounce,
  'grow':     $grow,
  'shrink':   $shrink,
  'flipX':    $flipX,
  'flipY':    $flipY,
  'openX':    $openX,
  'openY':    $openY,
  'flipperX': $flipperX,
  'flipperY': $flipperY,
  // Skew
  'twistT':   $twistT,
  'twistR':   $twistR,
  'twistB':   $twistB,
  'twistL':   $twistL,
  'torsionT': $torsionT,
  'torsionR': $torsionR,
  'torsionB': $torsionB,
  'torsionL': $torsionL
) !default;

:root {
  @each $key, $value in $transforms {
    --#{$key}: #{$value};
  }

  --originT: top;
  --originR: right;
  --originB: bottom;
  --originL: left;
}

@each $key, $value in $transforms {
  @include keyframes($key);
}

// Animation Duration
$animation-duration: 2s !default;

$animation-duration-tn: 500ms !default;
$animation-duration-sm: 1s    !default;
$animation-duration-md: 2s    !default;
$animation-duration-lg: 3s    !default;
$animation-duration-xl: 4s    !default;
$animation-duration-wd: 5s    !default;

$animation-durations: (
  'tn': $animation-duration-tn,
  'sm': $animation-duration-sm,
  'md': $animation-duration-md,
  'lg': $animation-duration-lg,
  'xl': $animation-duration-xl,
  'wd': $animation-duration-wd
) !default;

// Animation Timing Function
$animation-timing-function-linear:        cubic-bezier(0, 0, 1, 1)        !default;
$animation-timing-function-ease-in:       cubic-bezier(0.42, 0, 1, 1)     !default;
$animation-timing-function-ease-out:      cubic-bezier(0, 0, 0.58, 1)     !default;
$animation-timing-function-ease-in-out:   cubic-bezier(0.42, 0, 0.58, 1)  !default;
$animation-timing-function-cubic-bezier:  cubic-bezier(0.2, -2, 0.8, 2)   !default;
$animation-timing-function-steps:         steps(5, start)                 !default;

$animation-timing-functions: (
  'linear': $animation-timing-function-linear,
  'in':     $animation-timing-function-ease-in,
  'out':    $animation-timing-function-ease-out,
  'inout':  $animation-timing-function-ease-in-out,
  'bezier': $animation-timing-function-cubic-bezier,
  'steps':  $animation-timing-function-steps,
) !default;

// Animation Iteration Count
$animation-iteration-count-few:   2 !default;
$animation-iteration-count-many:  4 !default;

$animation-iteration-counts: (
  'few':  $animation-iteration-count-few,
  'many': $animation-iteration-count-many,
  'loop': infinite
) !default;

// Animation Delay
$animation-delay-sm:  1s  !default;
$animation-delay-md:  2s  !default;
$animation-delay-lg:  3s  !default;

$animation-delays: (
  'small':  $animation-delay-sm,
  'medium': $animation-delay-md,
  'large':  $animation-delay-lg,
) !default;

// Animation Direction
$animation-directions: (
  'alt':    alternate,
  'rev':    reverse,
  'altrev': alternate-reverse
) !default;

// Animation Options
$animation-options: (
  'duration':         $animation-durations,
  'timing-function':  $animation-timing-functions,
  'iteration-count':  $animation-iteration-counts,
  'delay':            $animation-delays
) !default;

// Animation CSS Variables
[class*="anima-"] {
  --animation-duration: #{$animation-duration};

  @each $type, $option in $animation-options {
    @each $key, $value in $option {
      --animation-#{$type}-#{$key}: #{$value};
    }
  }
}

// Animation default
[class*="anima-"][class*="-this"],
[class*="anima-"][class*="-global"] > *,
[class*="anima-"][class*="-onto"]:hover,
[class*="anima-"][class*="-onto"]:focus,
*:hover > [class*="anima-"][class*="-into"],
*:focus > [class*="anima-"][class*="-into"],
[class*="anima-"][class*="-toall"]:hover > *,
[class*="anima-"][class*="-toall"]:focus > *,
[class*="anima-"][class*="-toone"] > *:hover,
[class*="anima-"][class*="-toone"] > *:focus,
[class*="anima-"][class*="-radio1"]:checked ~ [class*="anima-"][class*="-relay"] [class*="anima-"][class*="-target1"],
[class*="anima-"][class*="-radio2"]:checked ~ [class*="anima-"][class*="-relay"] [class*="anima-"][class*="-target2"],
[class*="anima-"][class*="-radio3"]:checked ~ [class*="anima-"][class*="-relay"] [class*="anima-"][class*="-target3"],
[class*="anima-"][class*="-radio4"]:checked ~ [class*="anima-"][class*="-relay"] [class*="anima-"][class*="-target4"],
[class*="anima-"][class*="-radio5"]:checked ~ [class*="anima-"][class*="-relay"] [class*="anima-"][class*="-target5"],
[class*="anima-"][class*="-check"]:checked ~ [class*="anima-"][class*="-hub"] [class*="anima-"][class*="-goal"] {
  animation-duration: var(--animation-duration);
}

// Animations
@each $key, $value in $transforms {
  @include anima($key, 'animation-name', $key);
}

// Animation Options
@each $type, $option in $animation-options {
  @each $key, $value in $option {
    @include anima($key, 'animation-#{$type}', 'var(--animation-#{$type}-#{$key})');
  }
}

// Animation Directions
@each $key, $value in $animation-directions {
  @include anima($key, 'animation-direction', $value);
}
