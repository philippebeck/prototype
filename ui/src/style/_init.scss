// Breakpoints
$breakpoint-sm: 576px   !default;
$breakpoint-md: 768px   !default;
$breakpoint-lg: 992px   !default;
$breakpoint-xl: 1200px  !default;
$breakpoint-wd: 1600px  !default;

$breakpoints: (
  'sm': $breakpoint-sm,
  'md': $breakpoint-md,
  'lg': $breakpoint-lg,
  'xl': $breakpoint-xl,
  'wd': $breakpoint-wd
) !default;

// Hide Radio & Check Classes
[class*="check"],
[class*="radio"] {
  display: none !important;
}

// Container
$containers: (
  '50': 50%,
  '60': 60%,
  '70': 70%,
  '80': 80%,
  '90': 90%
) !default;

[class*="container"] {
  --container-max-width: 100%;

  margin: auto;
  max-width: var(--container-max-width);
}

@mixin container($key, $type, $value) {
  [class*="container-"][class*="-#{$key}#{$type}"] {
    max-width: #{$value};
  }
}

@each $key, $value in $containers {
  @include container($key, 'tn', $value);
}

@each $type, $breakpoint in $breakpoints {
  @media (min-width: $breakpoint) {
    @each $key, $value in $containers {
      @include container($key, $type, $value);
    }
  }
}

// Button
@mixin btn-color($key, $value) {
  .btn-#{$key},
  .button-#{$key}:hover,
  .button-#{$key}:focus,
  .button-#{$key}-check:checked + .button-#{$key} {
    border-color: var(--white);
    background-color: var(--#{$key});
    color: var(--white);
  }

  .button-#{$key},
  .btn-#{$key}:hover,
  .btn-#{$key}:focus,
  .btn-#{$key}-check:checked + .btn-#{$key} {
    border-color: var(--#{$key});
    background-color: var(--white);
    color: var(--#{$key});
  }
}

// Gallery
@mixin gallery ($margin, $width) {
  .gallery {
    --gallery-figure-margin: #{$margin};
    --gallery-figure-width: #{$width};
  }
}

// Helpers
@mixin helpers($class, $property, $value) {
  .#{$class},
  .global-#{$class} > *,
  .onto-#{$class}:hover,
  .onto-#{$class}:focus,
  .check-#{$class}:checked ~ .hub-#{$class} .goal-#{$class} {
      #{$property}: #{$value};
  }
}

@mixin helpers-concat($class, $property, $value) {
  [class*="#{$class}"],
  [class*="global-"][class*="#{$class}"] > *,
  [class*="onto-"][class*="#{$class}"]:hover,
  [class*="onto-"][class*="#{$class}"]:focus,
  [class*="check-"][class*="#{$class}"]:checked ~ [class*="hub-"][class*="#{$class}"] [class*="goal-"][class*="#{$class}"] {
      #{$property}: #{$value};
  }
}

// Primary Colors
$primary:   65, 105, 225  !default; // RoyalBlue
$secondary: 220, 220, 220 !default; // Gainsboro
$pink:      255, 0, 255   !default; // Magenta
$red:       250, 128, 114 !default; // Salmon
$orange:    255, 140, 0   !default; // DarkOrange
$yellow:    255, 215, 0   !default; // Gold
$brown:     139, 69, 19   !default; // SaddleBrown
$green:     50, 205, 50   !default; // LimeGreen
$cyan:      0, 128, 128   !default; // Teal
$blue:      30, 144, 255  !default; // DodgerBlue
$violet:    106, 90, 205  !default; // SlateBlue

$primary-colors: (
  "primary":    $primary,
  "secondary":  $secondary,
  "pink":       $pink,
  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "brown":      $brown,
  "green":      $green,
  "cyan":       $cyan,
  "blue":       $blue,
  "violet":     $violet
) !default;

// Grayscale
$black: 15, 15, 15    !default; // Black
$gray:  105, 105, 105 !default; // DimGray
$grey:  192, 192, 192 !default; // Silver
$white: 255, 255, 240 !default; // Ivory

$grayscale: (
  "black":  $black,
  "gray":   $gray,
  "grey":   $grey
) !default;

$grayscales: (
  "black":  $black,
  "gray":   $gray,
  "grey":   $grey,
  "white":  $white
) !default;

// Brand Colors
$facebook:  66, 103, 178  !default;
$github:    36, 41, 46    !default;
$linkedin:  0, 119, 181   !default;
$paypal:    39, 52, 106   !default;
$twitter:   29, 161, 242  !default;

$brand-colors: (
  "fb": $facebook,
  "gh": $github,
  "in": $linkedin,
  "pp": $paypal,
  "tw": $twitter
) !default;

// Composite Colors
$base-colors: $primary-colors, $grayscales;
$main-colors: $primary-colors, $brand-colors;
$all-colors:  $primary-colors, $grayscales, $brand-colors;

// CSS Colors
:root {
  --opacity-dark: 0.8;
  --opacity-light: 0.2;
  
  // Opaque Colors
  @each $colors in $all-colors {
    @each $key, $value in $colors {
      --#{$key}: rgb(#{$value});
    }
  }

  // Transparent Colors
  @each $colors in $base-colors {
    @each $key, $value in $colors {
      --#{$key}-dark: rgba(#{$value}, var(--opacity-dark));
      --#{$key}-light: rgba(#{$value}, var(--opacity-light));
    }
  }
}

// Color
@each $colors in $all-colors {
  @each $key, $value in $colors {
    @include helpers('color-#{$key}', 'color', 'var(--#{$key})');
  }
}

// Background Color
@each $colors in $base-colors {
  @each $key, $value in $colors {
    @include helpers('bg-#{$key}', 'background-color', 'var(--#{$key})');
    @include helpers('bg-#{$key}-dark', 'background-color', 'var(--#{$key}-dark)');
    @include helpers('bg-#{$key}-light', 'background-color', 'var(--#{$key}-light)');
  }
}

* {
  --all-box-sizing: border-box;
  --target-margins: 7rem;
  box-sizing: var(--all-box-sizing);

  &:target {
    padding-top: var(--target-margins);
    margin-top: -var(--target-margins);
  }
}

html {
  --html-font-size: 62.5%;
  --html-scroll-behavior: smooth;

  font-size: var(--html-font-size);
  scroll-behavior: var(--html-scroll-behavior);
}

@media (prefers-reduced-motion: reduce) {
  html {
    scroll-behavior: auto;
  }
}

body {
  --body-background-color: var(--grey-light);
  --body-color: var(--black);
  --body-font-size: 2rem;
  --body-line-height: 1.6;

  margin: 0;
  padding: 0;
  line-height: var(--body-line-height);
  font-size: var(--body-font-size);
  font-family: var(--sans-serif);
  color: var(--body-color);
  background-color: var(--body-background-color);
}

main {
  --main-text-align: center;
  text-align: var(--main-text-align);
}

article {
  --article-margin-bottom: 20px;
  margin-bottom: var(--article-margin-bottom);
}

h1,
h2,
h3 {
  --title-color: var(--primary);
}

h4,
h5,
h6 {
  --title-color: var(--blue);
}

h1 {
  --title-font-size: calc(var(--body-font-size) * 2.5);
}

h2 {
  --title-font-size: calc(var(--body-font-size) * 2);
}

h3 {
  --title-font-size: calc(var(--body-font-size) * 1.6);
}

h4 {
  --title-font-size: calc(var(--body-font-size) * 1.3);
}

h5 {
  --title-font-size: calc(var(--body-font-size) * 1.1);
}

h6 {
  --title-font-size: var(--body-font-size);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  --title-font-family: var(--serif);
  --title-text-align: center;
  --title-text-transform: capitalize;

  font-family: var(--title-font-family);
  text-align: var(--title-text-align);
  text-transform: var(--title-text-transform);
  font-size: var(--title-font-size);
  color: var(--title-color);
}

a {
  --link-color: var(--primary);
  --link-outline: 0;
  --link-text-decoration: none;

  text-decoration: var(--link-text-decoration);
  outline: var(--link-outline);
  color: var(--link-color);
}

button {
  --button-background-color: transparent;
  --button-color: var(--white);
  --button-border: none;
  --button-cursor: pointer;

  border: var(--button-border);
  background-color: var(--button-background-color);
  color: var(--button-color);
  cursor: var(--button-cursor);
}

ul {
  --list-margin: 0 0 10px;
  --list-padding: 0;
  --list-style: none;

  margin: var(--list-margin);
  padding: var(--list-padding);
  list-style: var(--list-style);
}

figure {
  --figure-margin: 0;
  margin: var(--figure-margin);
}

img,
video {
  --img-max-width: 100%;
  --img-height: auto;
  --img-object-fit: contain;

  max-width: var(--img-max-width);
  height: var(--img-height);
  object-fit: var(--img-object-fit);
}

table {
  --table-border-collapse: collapse;
  --table-margin: auto;
  --table-text-align: center;
  --table-vertical-align: middle;

  margin: var(--table-margin);
  border-collapse: var(--table-border-collapse);
  text-align: var(--table-text-align);
  vertical-align: var(--table-vertical-align);
  font-family: var(--monospace);
}

code,
pre {
  --code-background-color: var(--black);
  --code-color: var(--green);
  --code-margin: auto;
  --code-overflow: scroll;
  --code-padding: 10px;
  --code-text-align: initial;
  --code-width: 100%;
  
  overflow: var(--code-overflow);
  margin: var(--code-margin);
  padding: var(--code-padding);
  width: var(--code-width);
  font-family: var(--monospace);
  text-align: var(--code-text-align);
  background-color: var(--code-background-color);
  color: var(--code-color);

  & > *::selection {
    background-color: var(--code-color);
    color: var(--code-background-color);
  }
}

@media (min-width: 576px) {
  code,
  pre {
    --code-width: 95%;
  }
}

@media (min-width: 768px) {
  code,
  pre {
    --code-width: 90%;
  }
}

@media (min-width: 992px) {
  code,
  pre {
    --code-width: 85%;
  }
}

@media (min-width: 1200px) {
  code,
  pre {
    --code-width: 80%;
  }
}

@media (min-width: 1600px) {
  code,
  pre {
    --code-width: 75%;
  }
}
